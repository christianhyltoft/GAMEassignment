@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0

abstract class Field{
#name: String
#position: int
LandOnField(Player): void
}
abstract class PurchaseAbleField
{
#Player: owner
#price: int
}
class Deed{
-houseAmount: int
-bonusRentPerHouse: int
buildHouse(): void
}
class Ferry{

}
class Series{
-owner: Player
-deeds: Deed[]
}
class ChanceField{
}
class SodaCompany{
}
class FreeParkingField{
-int: MoneyOnParking
}
class Board{
}
class JailField
class Startfield

class Player{
-name: String
-int: balance
changeBalance(int): void
-{static} playerNumber: int
}
class ChanceCardGetOutOfJail{
}
class ChanceCardMatadorGrant {
-int moneyAmount
}
class ChanceCardMove {
-myFields: Field[]
}
class ChanceCardPayBasedOnProperty {
-int houseAmount
-int hotelAmount
}
class ChanceCardPayOrReceive {
- int: moneyAmount
}
class ChanceCardReceiveMoneyFromPlayers {
-int: moneyAmount
-players: Player[]
}
class ChanceCard{
DrawCard(): void
#int chanceCardAmount
#int chanceCardID
#String chanceCardText
}
class Gamehandler{
-board: Board
-players: Player[]
-raffleCup: RaffleCup
playGame(): void
-generatePlayers(int): void
}
class Die{
-int: value
-int: maxValue
roll(): void
}
class RaffleCup{
-dies: Die[]
roll(): void

}

class GoToJailField{
}
Series "1" o- "0..1" Player

Series "1" o- "2..3" Deed
Player -> Field
ChanceCard "1" -|> "1..*" ChanceField
ChanceCardGetOutOfJail  -|> ChanceCard
ChanceCardMove -|> ChanceCard
ChanceCardPayBasedOnProperty -|> ChanceCard
ChanceCardPayOrReceive -|> ChanceCard
ChanceCardReceiveMoneyFromPlayers -|> ChanceCard
ChanecCardMatadorGrant "1" -|> "*" ChanceCard

RaffleCup "1" o- "2" Die
Gamehandler "1" o-- "1" RaffleCup
Gamehandler "1" o-- "1" Board
Gamehandler"1" o-- "3..6"Player
Player "1" o- "1" Account
Field<|--Startfield
Field<|--JailField
Field<|--GoToJailField
Board "1" o-- "   40" Field
Field<|--FreeParkingField
PurchaseAbleField<|--SodaCompany
PurchaseAbleField<|--Ferry
Field<|--PurchaseAbleField
PurchaseAbleField <|-- Deed
Field<|--ChanceField




@enduml